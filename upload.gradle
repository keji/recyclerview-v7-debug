apply plugin: 'maven'

def MAVEN_URL= 'http://stone-maven.byted.org/repository/maven-releases/'
def MAVEN_SNAPSHOT_URL = 'http://stone-maven.byted.org/repository/sandbox-maven-snapshot/'

ext {
//    GITHUB_REPO_PATH = "C/AAR"
    PUBLISH_GROUP_ID = 'android.support.v7.recyclerview'
    PUBLISH_ARTIFACT_ID = 'recyclerview-v7'
    PUBLISH_VERSION = '28.0.0-for-log'
}

uploadArchives {
    repositories {
        mavenDeployer {
            File propFile = new File('./mavenAccount.properties')

            def repositoryUserName = "admin"
            def repositoryPassword = "admin"
            if (propFile.canRead()) {
                Properties props = new Properties()
                props.load(new FileInputStream(propFile))

                if (props != null && props.containsKey('repositoryUserName') && props.containsKey('repositoryPassword')) {
                    repositoryUserName = props['repositoryUserName']
                    repositoryPassword = props['repositoryPassword']
                } else {
                    println 'error: there is no validate username and password'
                    return
                }
            } else {
                println 'error: can not read prop file'
                return
            }

            println repositoryUserName + " passwork: " + repositoryPassword

            snapshotRepository(url: MAVEN_SNAPSHOT_URL) {
                authentication(userName: repositoryUserName, password: repositoryPassword)
            }
            repository(url: MAVEN_URL) {
                authentication(userName: repositoryUserName, password: repositoryPassword)
            }
            pom.project {
                groupId project.PUBLISH_GROUP_ID
                artifactId project.PUBLISH_ARTIFACT_ID
                version project.PUBLISH_VERSION
            }
        }
    }
}

// 源代码一起打包
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
}
